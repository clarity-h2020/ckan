# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3.6"

services:
  ckan:
    depends_on:
      - ckan-db
    container_name: ${COMPOSE_PROJECT_NAME}-ckan
    build:
      context: ../../
      args:
          - CKAN_SITE_URL=${CKAN_SITE_URL}
    links: 
      - ckan-db
      - ckan-solr
      - ckan-redis
    ports:
      - "0.0.0.0:${CKAN_PORT:-5000}:5000"
    environment:
        #Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
        CKAN_SQLALCHEMY_URL: "postgresql://ckan:${POSTGRES_PASSWORD}@ckan-db/ckan"
        CKAN_DATASTORE_WRITE_URL: "postgresql://ckan:${POSTGRES_PASSWORD}@ckan-db/datastore"
        CKAN_DATASTORE_READ_URL: "postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@ckan-db/datastore"
        CKAN_SOLR_URL: "http://ckan-solr:8983/solr/ckan"
        CKAN_REDIS_URL: "redis://ckan-redis:6379/1"
        CKAN_DATAPUSHER_URL: "http://ckan-datapusher:8800"
        CKAN_SITE_URL: ${CKAN_SITE_URL}
        CKAN_MAX_UPLOAD_SIZE_MB: ${CKAN_MAX_UPLOAD_SIZE_MB}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        DS_RO_PASS: ${DATASTORE_READONLY_PASSWORD}
        # letsencrypt-nginx-proxy-companion Host  
        VIRTUAL_PORT: ${CKAN_PORT:-5000}
        VIRTUAL_HOST: ${VIRTUAL_HOST}
        LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
        LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    restart: always  
    volumes:
      - config:/etc/ckan
      - home:/usr/lib/ckan
      - storage:/var/lib/ckan

  ckan-datapusher:
    container_name: ${COMPOSE_PROJECT_NAME}-datapusher
    image: clementmouchet/datapusher
    restart: always
    ports:
      - "8800:8800"
    
  ckan-db:
    container_name: ${COMPOSE_PROJECT_NAME}-postgis
    networks:
           default:
                aliases:
                    - db
    build:
      context: ../../
      dockerfile: contrib/docker/postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    # HOST:CONTAINER !
    ports:
      - "0.0.0.0:${POSTGRES_PORT:-5432}:5432"
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data

  ckan-solr:
    container_name: ${COMPOSE_PROJECT_NAME}-solr
    build:
      context: ../../
      dockerfile: contrib/docker/solr/Dockerfile
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data
    restart: always

  ckan-redis:
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    image: redis:latest
    restart: always
    
volumes:
  config:
    name: ${COMPOSE_PROJECT_NAME}_config
  home:    
    name: ${COMPOSE_PROJECT_NAME}_home
  storage:
    name: ${COMPOSE_PROJECT_NAME}_storage
  pg-data:
    name: ${COMPOSE_PROJECT_NAME}_pg-data
  solr_data:
    name: ${COMPOSE_PROJECT_NAME}_solr_data
    
networks:
  default:
    external:
      name: ${NETWORK:-clarity}